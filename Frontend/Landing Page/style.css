@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap');

:root{
    --red:#FF0000;
    --cyan: #00FFFF;
    --blue: #0000FF;
    --darkBlue: #00008B;
    --darkGray: #666;
    --white: #FFF;
    --lightGray: #CCC;
    --darkCharcoal: #333;
    --black: #0000001A;
    --gold: #FFD700;
    --blacker: #000000;
    --green1: #197f14;
    --green2: #032c01;
    --beige: #e7cebc;
    --orange1: #f6b468;
    --orange2: #bc6c25;
    --grayishWhite: #e7e6e6;
    --paleGreen: #DFFFD6;
    --peachyOrange: #f6b468;
    --reddishBrown: #8d4920;
}

* {
    font-family: 'Open Sans', sans-serif; /* Sets 'Open Sans' as the default font for all elements */
    margin: 0; /* Eliminates default margin for consistency */
    padding: 0; /* Removes default padding for a uniform layout */
    box-sizing: border-box; /* Ensures padding and border are included in element's width and height */
    outline: none; /* Disables the outline that appears when elements like input fields are focused */
    border: none; /* Removes default borders from all elements */
    text-transform: none; /* Ensures no automatic letter case transformation */
    transition: all .2s linear; /* Adds a smooth 0.2s transition effect for changes to any CSS properties */
}

.background-container {
    position: absolute; /* Positions the container absolutely, relative to the nearest positioned ancestor */
    width: 180vh; /* Sets the width of the container to match the height of the viewport (100% of the viewport height) */
    height: 100vh; /* Sets the height of the container to 100% of the viewport height */
    z-index: -1; /* Places the background container behind other elements (lower stacking order) */
}

.background-container img {
    position: absolute; /* Positions the background image absolutely within its container */
    opacity: 0.5; /* Makes the image semi-transparent (50% opacity) */
    pointer-events: none; /* Disables interactions with the image (prevents clicks, hover effects, etc.) */
    transition: transform 10s ease, left 10s ease, top 10s ease, bottom 10s ease, right 10s ease; /* Smoothly transitions the image’s position and size over 10 seconds */
}

.check_out {
    position: relative; /* Positions the container relative to its normal flow, allowing it to act as a reference for its children */
    z-index: 1; /* Ensures the check_out section is on top of the background (higher stacking order) */
    justify-content: center; /* Centers the content horizontally */
    align-items: center; /* Centers the content vertically */
    overflow: auto; /* Allows scrolling when content overflows the container */
    width: 1500px; /* Sets a fixed width for the checkout container */
    height: 700px; /* Sets a fixed height for the checkout container */
}

.check_out::-webkit-scrollbar {
    display: none; /* Hides the default scrollbar (works in WebKit browsers like Chrome, Safari) */
}

*::selection {
    background: var(--blue); /* Changes the background color of selected text to the blue color variable */
    color: var(--white); /* Changes the color of selected text to white */
}

html {
    font-size: 62.5%; /* Sets the root font-size to 62.5% (10px if the browser default is 16px) for easier rem calculations */
    overflow-x: hidden; /* Hides horizontal overflow to prevent scrolling issues */
    scroll-behavior: smooth; /* Enables smooth scrolling for anchor links */
    scroll-padding-top: 6rem; /* Adds padding at the top when scrolling to anchored elements */
}

body {
    background-color: var(--beige); /* Sets a background color for the body */
    display: flex;
    align-items: center;
    justify-items: center;
    min-height: 100vh;
}

section {
    padding: 2rem 9%; /* Adds 2rem padding to the top/bottom and 9% padding to the left/right for all sections */
}

.heading {
    text-align: center; /* Centers the text in the heading */
    font-size: 3.5rem; /* Sets the font size of the heading to 3.5rem */
    padding: 0rem; /* Removes any padding from the heading */
    color: var(--darkgray); /* Sets the text color to the dark gray color variable */
}

.heading span {
    color: var(--orange2); /* Changes the text color inside the <span> tag to the red color variable */
}



/* <----------Button starts here----------> */



.home .btn,
.contact .btn {
    display: inline-block; /* Allows the button to behave like an inline element but still accepts width/height like a block element */
    padding: .8rem 3rem; /* Adds padding: 0.8rem on top/bottom and 3rem on left/right */
    border: .2rem solid var(--reddishBrown); /* Sets a 0.2rem solid border using the reddish-brown variable */
    color: var(--reddishBrown); /* Applies the reddish-brown color to the button text */
    cursor: pointer; /* Changes the cursor to a pointer to indicate the button is clickable */
    font-size: 1.7rem; /* Sets the font size of the button text to 1.7rem */
    border-radius: .5rem; /* Rounds the button's corners with a 0.5rem radius */
    position: relative; /* Establishes a relative position, so the button can be used as a reference for its pseudo-element */
    overflow: hidden; /* Ensures that the button hides any content or pseudo-elements that go outside its boundaries */
    z-index: 0; /* Sets the stacking order of the button at 0, allowing pseudo-elements to stack behind it */
    margin-top: 1rem; /* Adds a 1rem space above the button */
    text-decoration: none; /* Removes text decorations like underlines from links and other elements */
}

.home .btn::before,
.contact .btn::before {
    content: ''; /* Inserts an empty content box (used to create a hover effect) */
    position: absolute; /* Positions the pseudo-element absolutely within the button */
    top: 0; /* Aligns the top of the pseudo-element with the top of the button */
    right: 0; /* Aligns the right edge of the pseudo-element with the right edge of the button */
    width: 0; /* Initially sets the width to 0 to create a sliding effect */
    height: 100%; /* Sets the height of the pseudo-element to match the height of the button */
    background: var(--reddishBrown); /* Applies the reddish-brown color as the background for the hover effect */
    transition: .3s linear; /* Smoothly transitions the width of the pseudo-element over 0.3 seconds */
    z-index: -1; /* Places the pseudo-element behind the button content (text) */
}

.home .btn:hover::before,
.contact .btn:hover::before {
    width: 100%; /* Expands the pseudo-element to cover the entire button width when hovered */
    left: 0; /* Positions the pseudo-element starting from the left edge of the button */
}

.home .btn:hover,
.contact .btn:hover {
    color: var(--white); /* Changes the text color to white when the button is hovered */
}



/* <----------Button ends here----------> */



/* <----------Header starts here----------> */



header {
    position: fixed; /* Keeps the header fixed at the top of the page, visible during scrolling */
    top: 0; /* Positions the header at the very top of the viewport */
    left: 0; /* Aligns the header to the left edge of the page */
    right: 0; /* Ensures the header stretches across the full width of the page */
    z-index: 1000; /* Ensures the header stays above other elements (high stacking order) */
    display: flex; /* Uses flexbox for laying out the child elements (logo, navbar) */
    align-items: center; /* Vertically centers the content inside the header */
    justify-content: space-between; /* Distributes space between the logo on the left and the navbar on the right */
    background: var(--peachyOrange); /* Sets the background color of the header using the peachy-orange variable */
    padding: 1rem 5%; /* Adds 1rem padding to the top/bottom and 5% padding on the left/right */
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1); /* Adds a subtle shadow beneath the header for a raised effect */
}

header .logo {
    font-size: 2.5rem; /* Sets a large font size for the logo text */
    text-decoration: none; /* Removes text decorations like underlines from links and other elements */
    font-weight: bolder; /* Makes the logo text bold */
    color: var(--darkgray); /* Sets the text color of the logo using the dark-gray variable */
}

header .logo i {
    padding-right: .5rem; /* Adds 0.5rem spacing to the right of the icon in the logo */
    color: var(--gold); /* Colors the icon (such as a font-awesome icon) in gold */
}

header .navbar {
    display: flex; /* Aligns the navbar links in a horizontal row */
    justify-content: flex-start; /* Aligns the navbar links to the left side of the header */
    margin-right: 50rem; /* Adds 45rem margin to the right to adjust spacing (can be customized) */
    font-weight: 600; /* Sets the font weight of the navbar links to semi-bold */
}

header .navbar a {
    font-size: 2rem; /* Sets the font size of the navbar links */
    text-decoration: none; /* Removes text decorations like underlines from links and other elements */
    margin-left: 2rem; /* Adds 2rem spacing between each navbar link */
    color: var(--darkgray); /* Sets the text color of the navbar links using the dark-gray variable */
}

header .navbar a:hover {
    color: var(--reddishBrown); /* Changes the link color to red when the user hovers over the navbar links */
    font-size: 2.1rem;
    font-weight: 1000;
}

#menu-bar {
    font-size: 3rem; /* Sets the size of the menu bar icon (often for mobile view) */
    cursor: pointer; /* Changes the cursor to a pointer when hovering over the menu icon */
    color: var(--darkCharcoal); /* Colors the menu bar icon with the dark charcoal color */
    border: .1rem solid var(--darkCharcoal); /* Adds a thin dark charcoal border around the menu icon */
    border-radius: .3rem; /* Rounds the corners of the menu icon’s border */
    padding: .5rem 1.5rem; /* Adds padding of 0.5rem to the top/bottom and 1.5rem to the left/right */
    display: none; /* Hides the menu icon (usually displayed in mobile views only) */
}

@media screen and (max-width: 768px) {
    header .navbar a {
        font-size: 1.5rem; /* Sets the font size of the navbar links */
        text-decoration: none; /* Removes text decorations like underlines from links and other elements */
        margin-left: 1rem; /* Adds 2rem spacing between each navbar link */
        color: var(--darkgray); /* Sets the text color of the navbar links using the dark-gray variable */
    }

    header .navbar a:hover {
        font-size: 1.7rem;
    }
}



/* <----------Header ends here----------> */



/* <----------Home starts here----------> */



.home {
    display: flex; /* Applies a flexbox layout, allowing child elements to align and space dynamically */
    flex-wrap: wrap; /* Ensures the child elements wrap onto the next line if the container is too small (responsive behavior) */
    gap: 1.5rem; /* Adds a 1.5rem gap between the child elements */
    min-height: 100vh; /* Makes sure the home section fills at least 100% of the viewport height */
    align-items: center; /* Vertically centers the child elements within the container */
    background: url(Images/White\ Background.jpg) no-repeat; /* Sets a background image, preventing repetition */
    background-size: cover; /* Ensures the background image covers the entire container */
    background-position: center; /* Centers the background image */
}

.home .content {
    position: relative; /* Allows for the pseudo-element positioning relative to this element */
    border-radius: 1rem; /* Adds rounded corners to the content block */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1); /* Adds a light shadow for a subtle 3D effect */
    flex: 1 1 40rem; /* Allows the content to grow/shrink, with a base size of 40rem */
    padding: 4rem; /* Adds 4rem of padding inside the content area */
    order: 1; /* Ensures this content appears first (before other flex elements) */
    z-index: 1; /* Places the content above any lower z-index elements (like the pseudo-element background) */
}

.home .content::before {
    content: ''; /* Inserts an empty pseudo-element for background effect */
    position: absolute; /* Positions the pseudo-element relative to its parent (.content) */
    top: 0; /* Aligns the top of the pseudo-element with the top of the content */
    left: 0; /* Aligns the left edge of the pseudo-element with the left edge of the content */
    width: 100%; /* Ensures the pseudo-element spans the full width of the content */
    height: 100%; /* Ensures the pseudo-element spans the full height of the content */
    background-color: var(--peachyOrange); /* Applies a semi-transparent background color */
    border-radius: 1rem; /* Matches the border-radius of the content for consistent rounded corners */
    opacity: 0.64; /* Adds transparency to the background for a layered effect */
    z-index: -1; /* Places the pseudo-element behind the actual content */
}

.home .content h3 {
    font-size: 5rem; /* Sets the font size for the h3 element to 5rem (large heading) */
    color: var(--blacker); /* Uses a custom color (darker shade) for the heading text */
}

.home .content p {
    font-size: 1.7rem; /* Sets the font size for paragraph text to 1.7rem */
    color: var(--blacker); /* Uses the darker color for paragraph text */
    padding: 1rem 0; /* Adds 1rem padding to the top and bottom of the paragraph for spacing */
}

.home .image {
    flex: 1 1 40rem; /* Allows the image container to grow/shrink with a base size of 40rem */
    order: 2; /* Ensures the image appears after the content block */
}

.home .image img {
    width: 100%; /* Makes the image take up 100% of its container's width */
    padding: 1rem; /* Adds 1rem of padding around the image */
    border-radius: 20px; /* Rounds the corners of the image for a smooth, polished look */
}



/* <----------Home ends here----------> */



/* <----------Carousel starts here----------> */



.card-slider {
    max-height: 600px;
}

.card-slider .container {
    position: relative; /* Ensures the pseudo-element is positioned relative to the container */
    z-index: 1; /* Keeps the actual content in front of the pseudo-element */
    padding: 2rem; /* Adjust padding as necessary for spacing */
    border-radius: 1rem; /* Adds rounded corners to the container */
    padding-bottom: 3rem;
}

.card-slider .container::before {
    content: ''; /* Inserts an empty pseudo-element for the background effect */
    position: absolute; /* Positions the pseudo-element relative to its parent (.container) */
    top: 0; /* Aligns the top of the pseudo-element with the top of the container */
    left: 0; /* Aligns the left edge of the pseudo-element with the left edge of the container */
    width: 100%; /* Makes the pseudo-element span the full width of the container */
    height: 55%; /* Makes the pseudo-element span the full height of the container */
    background-color: var(--peachyOrange); /* Use the same semi-transparent background color */
    border-radius: 1rem; /* Matches the border-radius of the container */
    opacity: 0.64; /* Adjust the transparency */
    z-index: -1; /* Places the pseudo-element behind the actual content */
}

.card-wrapper {
    max-width: 1100px;
    margin: 0 60px 35px;
    padding: 20px 10px;
    overflow: hidden;
}

.card-list .card-item {
    list-style: none;
}

.card-list .card-item .card-link {
    /* margin-left: 15rem;
    width: 900px; */
    user-select: none;
    display: block;
    background: var(--white);
    padding: 18px;
    border-radius: 12px;
    text-decoration: none;
    border: 2px solid transparent;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.05);
    transition: 0.2s ease;
}

.card-list .card-item .card-link:active {
    cursor: grabbing;
}

.card-list .card-item .card-link:hover {
    border-color: #5372F0;
}

.card-list .card-link .card-image {
    width: 100%;
    aspect-ratio: 16/9;
    object-fit: cover;
    border-radius: 10px;

}

.card-list .card-link .badge {
    color: #5372F0;
    background: #DDE4FF;
    padding: 8px 16px;
    font-size: 1rem;
    font-weight: 500;
    margin: 16px 0 18px;
    width: fit-content;
    border-radius: 50px;
}

.card-list .card-link .badge.farming {
    color: #B22485;
    background: #F7DFF5;
}

.card-list .card-link .badge.farmland {
    color: #B25A2B;
    background: #FFE3D2;
}

.card-list .card-link .badge.strawberries {
    color: #205C20;
    background: #D6F8D6;
}

.card-list .card-link .badge.transaction {
    color: var(--darkBlue);
    background: var(--cyan);
}

.card-list .card-link .badge.logo {
    color: var(--orange2);
    background: var(--peachyOrange);
}

.card-list .card-link .card-title {
    font-size: 1.19rem;
    color: #000;
    font-weight: 600;
} 

.card-list .card-link .card-button {
    height: 35px;
    width: 35px;
    color: #5372F0;
    border-radius: 50%;
    margin: 30px 0 5px;
    background: none;
    cursor: pointer;
    border: 2px solid #5372F0;
    transform: rotate(-45deg);
}

.card-list .card-link:hover .card-button{
    color: var(--white);
    background: #5372F0;
}

.card-wrapper .swiper-pagination {
    margin-bottom: 37rem; /* Moves the entire pagination element up */
    position: absolute; /* Ensures it respects the bottom value */
    width: 100%; /* Optional: ensures the pagination stays centered */
    text-align: center; /* Centers the bullets */
}

.card-wrapper .swiper-pagination-bullet {
    height: 13px;
    width: 13px;
    opacity: 0.5;
    background-color: #5372F0;
}

.card-wrapper .swiper-pagination-bullet-active {
    opacity: 1;
}

.card-wrapper .swiper-slide-button {
    color: #5372F0;
    margin-top: -200px; 
}

@media screen and (max-width: 768px) {
    .card-wrapper {
        margin: 0 10px 25px;
    }

    .card-wrapper .swiper-slide-button {
        display: none;
    }
}



/* <----------Carousel ends here----------> */



/* <----------Features starts here----------> */



.features .heading { 
    /* Controls the style of the heading across feature sections */
    width: 100%; /* Ensures the heading takes up the full width */
    text-align: center; /* Centers the heading text */
    font-size: 4rem; /* Sets a large font size for the heading */
    color: var(--darkCharcoal); /* Applies dark charcoal color to the heading text */
}

.features,
.features2,
.features3 {
    display: flex; /* Uses flexbox layout for both content and image */
    flex-wrap: wrap; /* Allows child elements (content and image) to wrap onto the next line if necessary */
    gap: 10rem; /* Adds 10rem space between content and image */
    min-height: 70vh; /* Ensures the section takes up at least 70% of the viewport height */
    align-items: center; /* Vertically centers the content and image */
    padding-top: 0rem; /* No padding added at the top */
}

.features .content {
    position: relative; /* Ensures the pseudo-element is relative to .content */
    z-index: 1; /* Ensures the actual content is in front of the pseudo-element */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1); /* Adds a light shadow for a subtle 3D effect */
    padding: 4rem; /* Adds 4rem of padding inside the content area */
    flex: 1 1 40rem; /* Allows the content to grow/shrink, with a base size of 40rem */
}

.features .content::before {
    content: ''; /* Inserts an empty pseudo-element for background effect */
    position: absolute; /* Positions the pseudo-element relative to its parent (.content) */
    top: -2rem; /* Moves the pseudo-element 2rem above the content */
    left: 0; /* Aligns the left edge of the pseudo-element with the left edge of the content */
    width: 100%; /* Ensures the pseudo-element spans the full width of the content */
    height: calc(100% + 2rem); /* Increases the height to cover the extra space */
    background-color: var(--peachyOrange); /* Applies a semi-transparent background color */
    border-radius: 1rem; /* Matches the border-radius of the content for consistent rounded corners */
    opacity: 0.64; /* Adds transparency to the background */
    z-index: -1; /* Places the pseudo-element behind the actual content */
}

.features2 .content {
    position: relative; /* Ensures the pseudo-element is relative to .content */
    z-index: 1; /* Ensures the actual content is in front of the pseudo-element */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1); /* Adds a light shadow for a subtle 3D effect */
    padding: 4rem; /* Adds 4rem of padding inside the content area */
    flex: 1 1 40rem; /* Allows the content to grow/shrink, with a base size of 40rem */
}

.features2 .content::before {
    content: ''; /* Inserts an empty pseudo-element for background effect */
    position: absolute; /* Positions the pseudo-element relative to its parent (.content) */
    top: -2rem; /* Moves the pseudo-element 2rem above the content */
    left: 0; /* Aligns the left edge of the pseudo-element with the left edge of the content */
    width: 100%; /* Ensures the pseudo-element spans the full width of the content */
    height: calc(100% + 2rem); /* Increases the height to cover the extra space */
    background-color: var(--peachyOrange); /* Applies a semi-transparent background color */
    border-radius: 1rem; /* Matches the border-radius of the content for consistent rounded corners */
    opacity: 0.64; /* Adds transparency to the background */
    z-index: -1; /* Places the pseudo-element behind the actual content */
}

.features3 .content {
    position: relative; /* Ensures the pseudo-element is relative to .content */
    z-index: 1; /* Ensures the actual content is in front of the pseudo-element */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1); /* Adds a light shadow for a subtle 3D effect */
    padding: 4rem; /* Adds 4rem of padding inside the content area */
    flex: 1 1 40rem; /* Allows the content to grow/shrink, with a base size of 40rem */
}

.features3 .content::before {
    content: ''; /* Inserts an empty pseudo-element for background effect */
    position: absolute; /* Positions the pseudo-element relative to its parent (.content) */
    top: -2rem; /* Moves the pseudo-element 2rem above the content */
    left: 0; /* Aligns the left edge of the pseudo-element with the left edge of the content */
    width: 100%; /* Ensures the pseudo-element spans the full width of the content */
    height: calc(100% + 2rem); /* Increases the height to cover the extra space */
    background-color: var(--peachyOrange); /* Applies a semi-transparent background color */
    border-radius: 1rem; /* Matches the border-radius of the content for consistent rounded corners */
    opacity: 0.64; /* Adds transparency to the background */
    z-index: -1; /* Places the pseudo-element behind the actual content */
}

.features .content h3,
.features2 .content h3,
.features3 .content h3 {
    font-size: 2rem; /* Sets the font size of the h3 element */
    color: var(--blacker); /* Applies a black color to the h3 text */
    font-weight: 800; /* Sets a bold weight for the h3 element */
}

.features .content p,
.features2 .content p,
.features3 .content p {
    font-size: 1.7rem; /* Sets the font size of the paragraph text */
    color: var(--blacker); /* Applies a black color to the paragraph text */
    font-weight: 500; /* Sets a semi-bold font weight for paragraph text */
    padding: 1rem 0; /* Adds 1rem padding above and below the paragraph text */
}

.features .content ul,
.features2 .content ul,
.features3 .content ul {
    list-style-type: disc; /* Uses bullet points for the list items */
    padding-left: 20px; /* Indents the list by 20px */
}

.features .content li,
.features2 .content li,
.features3 .content li {
    font-size: 1.7rem; /* Sets the font size for list items to match the paragraphs */
    color: var(--blacker); /* Sets the text color to black */
    margin: 0; /* Removes default margins for list items */
}

.features .content {
    flex: 1 1 40rem; /* Allows the content to flex-grow, with a base size of 40rem */
    padding-top: 1rem; /* Adds padding above the content */
    order: 2; /* Places the content after the image */
}

.features .image {
    flex: 1 1 40rem; /* Allows the image to flex-grow, with a base size of 40rem */
    order: 1; /* Places the image before the content */
}

.features2 .content {
    flex: 1 1 40rem; /* Allows the content to flex-grow, with a base size of 40rem */
    padding-top: 1rem; /* Adds padding above the content */
    order: 1; /* Places the content before the image */
}

.features2 .image {
    flex: 1 1 40rem; /* Allows the image to flex-grow, with a base size of 40rem */
    order: 2; /* Places the image after the content */
}

.features3 .content {
    flex: 1 1 40rem; /* Allows the content to flex-grow, with a base size of 40rem */
    padding-top: 1rem; /* Adds padding above the content */
    order: 2; /* Places the content after the image */
}

.features3 .image {
    flex: 1 1 40rem; /* Allows the image to flex-grow, with a base size of 40rem */
    order: 1; /* Places the image before the content */
}

.features .image img,
.features2 .image img,
.features3 .image img {
    width: 100%; /* Ensures the image takes up 100% of its container’s width */
    padding: 1rem; /* Adds 1rem of padding around the image */
    border-radius: 20px; /* Rounds the corners of the image for smooth edges */
}

@media screen and (max-width: 768px) {
    .features .content,
    .features2 .content, 
    .features3 .content  {
        order: 2;
    }

    .features .image,
    .features2 .image,
    .features3 .image {
        order: 1;
    }
}



/* <----------Features ends here----------> */



/* <----------Login Starts here----------> */



.login-dropdown{
    padding: 0;
}
.login-section {
    /* background: var(--blue); */
    display: flex;
    align-items: center;
    justify-items: center;
    padding: 0 20px;
    transform: translateX(50rem); /* Move the entire .login section 50px to the right */
}

.login-section .form-container{
    display: flex;
    width: 450px;
    height: 600px;
    border: 3px solid rgba(255, 255, 255, .3);
    border-radius: 30px;
    backdrop-filter: blur(20px);
    overflow: hidden;
}

.login-section .form-col {
    position: relative;
    width: 100%;
    overflow: hidden;
}

.login-section .btn-box {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 30px;
}

.login-section .btn {
    font-size: 16px; /* Change font size */
    color: #ffffff; /* Change font color */
    font-weight: 500px;
    padding: 8px 30px;
    border: none;
    border-radius: 30px;
    background: rgba(255, 255, 255, .2);
    cursor: pointer;
    transition: .2s;
}
.login-section .btn-1 {
    background: #bc6c25;
}

.login-section .btn:hover {
    opacity: 0.85;
}

.login-section .form-box {
    position: absolute;
    transform: translate(-50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    padding: 0 30px;
    transition: .3s;
}

.login-section .form-title {
    margin: 40px 0;
    color: var(--white);
    font-size: 28px;
    font-weight: 600;
}

.login-section .login-form {
    left: 50%;
    opacity: 1; /* Visible initially */
    transition: left 0.3s ease, opacity 0.3s ease; /* Smooth transition */
}

.login-section .register-form {
    left: 150%; /* Move it completely off the screen initially */
    top: 2rem;
    opacity: 0; /* Invisible initially */
    transition: left 0.3s ease, opacity 0.3s ease; /* Smooth transition */
}

.login-section .register-form,
.login-section .form-title {
    margin-block: 40px 20px;
}

.login-section .form-inputs {
    width: 100%;
}

.login-section .input-box {
    position: relative;
}

.login-section .inputs {
    width: 100%;
    height: 55px;
    margin: 10px 0;
    color: var(--white);
    border: none;
    border-radius: 50px;
    box-shadow: 0 0 10px rgba(0, 0, 0, .2);
}

.login-section .input-field {
    font-size: 16px;
    padding: 0 40px 0 20px;
    background: rgba(255, 255, 255, .2);
    outline: none;
    backdrop-filter: blur(20px);
}

.login-section ::placeholder {
    color: var(--white);
    font-size: 15px;
}

.login-section .input-box .icon {
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    color: var(--white);
    font-size: 30px; /* Adjust the size as needed */
    width: 30px;     /* Optional: Adjust width for non-font icons */
    height: 30px;
}

.login-section .forgot-pass,
.login-section .remember-me {
    display: flex;
    justify-content: right;
    gap: 5px;
}

.login-section .forgot-pass a {
    color: var(--white);
    text-decoration: none;
    font-size: 14px;
}

.login-section .forgot-pass a:hover {
    text-decoration: underline;
}

.login-section .remember-me label{
    color: var(--white);
    font-size: 14px;
}

.login-section .submit-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    background: var(--orange2);
    cursor: pointer;
    transition: .3s;
}

.login-section .submit-btn:hover {
    gap: 15px;

}

.login-section .social-login {
    display: flex;
    gap: 20px;
    margin-top: 20px;
}

.login-section .social-login-box {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40px;
    width: 40px;
    background: rgba(255, 255, 255, .2);
    border-radius: 50%;
    box-shadow: 0 0 10px rgba(0, 0, 0, .2);
    color: var(--white);
    cursor: pointer;
    transition: .2s;
}

.login-section .social-login-icon {
    width: 30px; /* Adjust the width to increase the icon size */
    height: 30px; /* Set the height to match the width for proportional scaling */
}

.login-section .social-login-icon:hover {
    transform: scale(0.9);
    color: var(--orange2);
}

@media screen and (max-width: 768px) {
    .login-section {
        transform: none;
    }
}



/* <----------Login ends here----------> */



/* <----------Ad Banner starts here----------> */



.ad-banner-section {
    padding-top: 10rem;
    padding-bottom: 10rem;
}

.ad-banner-section .ad-banner {
    width: 100%; /* Full-width banner */
    max-width: 1000px; /* Optional: limit the maximum width */
    height: 200px; /* Landscape height */
    border: 2px solid #bc6c25; /* Border color */
    background-color: #f1e6d4; /* Background color */
    position: relative;
    margin: 0 auto; /* Center the banner horizontally */
    overflow: hidden; /* Hide overflow from slides */
    margin-top: 20px;
}

.ad-banner-section .ad-slides {
    display: flex;
    transition: transform 0.5s ease-in-out; /* Smooth sliding effect */
    width: 100%;
    height: 100%;
}

.ad-banner-section .ad-slide {
    min-width: 100%; /* Each slide takes up full width */
    height: 100%; /* Full height for landscape effect */
    display: flex;
    justify-content: center; /* Center image horizontally */
    align-items: center; /* Center image vertically */
    position: relative;
}

.ad-banner-section .ad-slide:hover {
    cursor: pointer;
}

.ad-banner-section .ad-slide img {
    width: 100%; /* Full width of the container */
    height: auto; /* Keep height proportional for landscape */
    object-fit: cover; /* Ensure image covers its container */
    border-radius: 8px; /* Optional: round the image corners */
}

.ad-banner-section .ad-caption {
    position: absolute;
    bottom:5px;
    left: 10px;
    background-color: rgba(166, 85, 30, 0.7);
    color: #fff;
    padding: 10px;
    border-radius: 4px;
    font-size: 1.2rem;
}

.ad-banner-section .ad-navigation {
    position: absolute;
    bottom: 10px;
    right: 10px; /* Position dots on the right */
    text-align: center;
}

.ad-banner-section .ad-dot {
    display: inline-block;
    width: 12px;
    height: 12px;
    margin: 0 5px;
    background-color: #bbb;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.ad-banner-section .ad-dot.active {
    background-color: #bc6c25; /* Active dot color */
}



/* <----------Ad Banner ends here----------> */



/* <----------About starts here----------> */



.about {
    display: flex; /* Uses flexbox to lay out the content and image side by side */
    flex-wrap: wrap; /* Allows content and image to wrap onto the next line in smaller viewports (responsive) */
    gap: 10rem; /* Adds a 10rem gap between the content and image */
    min-height: 1vh; /* Ensures the section takes up at least a very small portion of the viewport height */
    align-items: center; /* Vertically aligns the child elements within the container */
    padding-top: 0rem; /* No padding at the top of the section */
}

.about .heading { 
    /* Controls the style of the section heading */
    width: 100%; /* Ensures the heading takes up the full width of the section */
    text-align: center; /* Centers the heading text */
    font-size: 4rem; /* Sets a large font size for the heading */
    color: var(--darkCharcoal); /* Applies a dark charcoal color to the heading text */
}

.about .content {
    flex: 1 1 40rem; /* Makes the content flexible, with a base width of 40rem */
    padding-top: 0rem; /* No padding above the content */
}

.about .content p {
    text-align: center; /* Centers the paragraph text */
    font-size: 1.7rem; /* Sets the font size of the paragraph text to 1.7rem */
    color: var(--darkgray); /* Uses dark gray as the text color */
    padding: 0rem 0; /* No padding above or below the paragraph text */
}

.about .services-list {
    display: grid; /* Uses CSS grid layout for the services section */
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Creates multiple columns, each at least 250px wide */
    grid-gap: 40px; /* Adds a 40px gap between grid items */
    margin-top: 50px; /* Adds a 50px margin above the grid */
}

.about .services-list div {
    background: var(--white); /* Sets a white background for each service box */
    padding: 40px; /* Adds 40px padding inside each service box */
    font-size: 13px; /* Sets a smaller font size for text inside the service box */
    font-weight: 300; /* Makes the text lighter (font-weight 300) */
    border-radius: 10px; /* Rounds the corners of the service box by 10px */
    transition: background 0.5s, transform 0.5s; /* Adds smooth transitions for background color and transform (hover effect) */
}

.about .services-list div i {
    font-size: 50px; /* Sets the icon size to 50px */
    margin-bottom: 30px; /* Adds 30px of space below the icon */
}

.about .services-list div img {
    width: 100%; /* Makes the image take up 100% of its container's width */
    height: auto; /* Adjusts the height automatically based on the aspect ratio */
    margin-bottom: 30px; /* Adds 30px of space below the image */
    border-radius: 10px; /* Rounds the corners of the image by 10px */
    object-fit: cover; /* Ensures the image covers its container without distorting */
}

.about .services-list div h2 {
    font-size: 20px; /* Sets the font size for the heading to 20px */
    font-weight: 500; /* Sets a semi-bold weight (500) for the heading */
    margin-bottom: 15px; /* Adds 15px of space below the heading */
}

.about .services-list div p {
    font-size: 20px; /* Sets the font size for paragraph text to 20px */
    font-weight: 500; /* Makes the paragraph text slightly bold */
    margin-bottom: 15px; /* Adds 15px of space below the paragraph */
}

.about .services-list div a {
    text-decoration: none; /* Removes the underline from the link */
    color: var(--blacker); /* Sets the text color of the link to a darker custom color */
    font-size: 12px; /* Sets the font size of the link to 12px */
    margin-top: 20px; /* Adds 20px of space above the link */
    display: inline-block; /* Displays the link as an inline block to apply padding and margins */
}

.about .services-list div:hover {
    background: #e8e8e8; /* Changes the background color to light gray when hovered */
    transform: translateY(-10px); /* Moves the service box up by 10px, creating a hover "floating" effect */
}



/* <----------About ends here----------> */



/* <----------Contacts starts here----------> */



.contact-left {
    flex-basis: 35%; /* Sets the width of the left contact section to 35% of the available space */
}

.contact-right {
    flex-basis: 60%; /* Sets the width of the right contact section to 60% of the available space */
}

.contact-left h1 {
    font-size: 25px; /* Sets the font size for the heading in the left contact section */
}

.contact-left p {
    margin-top: 30px; /* Adds 30px of space above each paragraph in the left contact section */
    font-size: 20px; /* Sets the font size for the paragraph text in the left contact section */
    font-weight: 500; /* Applies medium font weight to the paragraph text */
}

.contact-left p i {
    color: var(--blue); /* Colors the icons inside paragraphs with the blue variable */
    margin-right: 15px; /* Adds 15px of space to the right of each icon */
    font-size: 25px; /* Sets the font size for the icons */
}

.social-icons {
    margin-top: 30px; /* Adds 30px of space above the social icon links */
}

.social-icons a {
    text-decoration: none; /* Removes the underline from the social icon links */
    font-size: 50px; /* Sets the size of the social icons to 50px */
    margin-right: 15px; /* Adds 15px of space to the right of each social icon */
    color: #ababab; /* Colors the social icons in light gray */
    display: inline-block; /* Displays the social icons inline, allowing them to retain block-level properties */
    transition: transform 0.5s; /* Smoothly animates changes in the transform property over 0.5 seconds */
}

.social-icons a:hover {
    color: var(--darkBlue); /* Changes the color of social icons to dark blue when hovered */
    transform: translateY(-5px); /* Moves the social icons up by 5px when hovered */
}

.contact-right form {
    width: 100%; /* Ensures the form takes up the full width of the contact-right container */
}

.contact form input, form textarea {
    width: 100%; /* Sets the input fields and text areas to take up the full width of their container */
    border: 0; /* Removes the border from input fields and text areas */
    outline: none; /* Removes the default focus outline from input fields and text areas */
    background: #ababab; /* Sets a light gray background color for input fields and text areas */
    padding: 15px; /* Adds 15px of padding inside input fields and text areas */
    margin: 15px 0; /* Adds 15px of margin above and below input fields and text areas */
    color: #fff; /* Sets the text color inside input fields and text areas to white */
    font-size: 18px; /* Sets the font size of the text inside input fields and text areas */
    border-radius: 6px; /* Rounds the corners of input fields and text areas with a 6px radius */
}

.contact form .btn2 {
    padding: 10px 10px; /* Adds 10px of padding to the button */
    font-size: 18px; /* Sets the font size of the button text to 18px */
    margin-top: 20px; /* Adds 20px of space above the button */
    cursor: pointer; /* Changes the cursor to a pointer when hovering over the button */
}

.copyright {
    width: 100%; /* Sets the width of the copyright section to the full width of its container */
    text-align: center; /* Centers the text inside the copyright section */
    padding: 25px; /* Adds 25px of padding to the copyright section */
    font-size: 20px; /* Sets the font size of the copyright text to 20px */
    font-weight: 300; /* Applies a light font weight to the copyright text */
    margin-top: 20px; /* Adds 20px of margin above the copyright section */
}