@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap');

:root{
    --red:#FF0000;
    --cyan: #00FFFF;
    --blue: #0000FF;
    --darkBlue: #00008B;
    --darkGray: #666;
    --white: #FFF;
    --lightGray: #CCC;
    --darkCharcoal: #333;
    --black: #0000001A;
    --gold: #FFD700;
    --blacker: #000000;
    --green1: #197f14;
    --green2: #032c01;
    --beige: #e7cebc;
    --orange1: #f6b468;
    --orange2: #bc6c25;
    --grayishWhite: #e7e6e6;
    --paleGreen: #DFFFD6;
    --peachyOrange: #f6b468;
    --reddishBrown: #8d4920;
}

* {
    font-family: 'Open Sans', sans-serif; /* Sets 'Open Sans' as the default font for all elements */
    margin: 0; /* Eliminates default margin for consistency */
    padding: 0; /* Removes default padding for a uniform layout */
    box-sizing: border-box; /* Ensures padding and border are included in element's width and height */
    outline: none; /* Disables the outline that appears when elements like input fields are focused */
    border: none; /* Removes default borders from all elements */
    text-transform: none; /* Ensures no automatic letter case transformation */
    transition: all .2s linear; /* Adds a smooth 0.2s transition effect for changes to any CSS properties */
}

.background-container {
    position: absolute; /* Positions the container absolutely, relative to the nearest positioned ancestor */
    width: 200vh; /* Sets the width of the container to match the height of the viewport (100% of the viewport height) */
    height: 100vh; /* Sets the height of the container to 100% of the viewport height */
    z-index: -1; /* Places the background container behind other elements (lower stacking order) */
}

.background-container img {
    position: absolute; /* Positions the background image absolutely within its container */
    opacity: 0.5; /* Makes the image semi-transparent (50% opacity) */
    pointer-events: none; /* Disables interactions with the image (prevents clicks, hover effects, etc.) */
    transition: transform 10s ease, left 10s ease, top 10s ease, bottom 10s ease, right 10s ease; /* Smoothly transitions the imageâ€™s position and size over 10 seconds */
}

.check_out {
    position: relative; /* Positions the container relative to its normal flow, allowing it to act as a reference for its children */
    z-index: 1; /* Ensures the check_out section is on top of the background (higher stacking order) */
    justify-content: center; /* Centers the content horizontally */
    align-items: center; /* Centers the content vertically */
    overflow: auto; /* Allows scrolling when content overflows the container */
    width: 1500px; /* Sets a fixed width for the checkout container */
    height: 700px; /* Sets a fixed height for the checkout container */
}

.check_out::-webkit-scrollbar {
    display: none; /* Hides the default scrollbar (works in WebKit browsers like Chrome, Safari) */
}

*::selection {
    background: var(--blue); /* Changes the background color of selected text to the blue color variable */
    color: var(--white); /* Changes the color of selected text to white */
}

html {
    font-size: 62.5%; /* Sets the root font-size to 62.5% (10px if the browser default is 16px) for easier rem calculations */
    overflow-x: hidden; /* Hides horizontal overflow to prevent scrolling issues */
    scroll-behavior: smooth; /* Enables smooth scrolling for anchor links */
    scroll-padding-top: 6rem; /* Adds padding at the top when scrolling to anchored elements */
}

body {
    background-color: var(--beige); /* Sets a background color for the body */
    /* background: url('path-to-your-image.jpg') no-repeat center center fixed; */ /* Adds a background image that is centered and fixed during scrolling */
    /* background-size: cover; */ /* Ensures the image covers the entire viewport */
    /* background: linear-gradient(to bottom, var(--green1), var(--orange2)); */ /* Creates a vertical gradient from green at the top to orange at the bottom */
}

section {
    padding: 2rem 9%; /* Adds 2rem padding to the top/bottom and 9% padding to the left/right for all sections */
}

.heading {
    text-align: center; /* Centers the text in the heading */
    font-size: 3.5rem; /* Sets the font size of the heading to 3.5rem */
    padding: 0rem; /* Removes any padding from the heading */
    color: var(--darkgray); /* Sets the text color to the dark gray color variable */
}

.heading span {
    color: var(--red); /* Changes the text color inside the <span> tag to the red color variable */
}



/* <----------Button starts here----------> */



.btn {
    display: inline-block; /* Allows the button to behave like an inline element but still accepts width/height like a block element */
    padding: .8rem 3rem; /* Adds padding: 0.8rem on top/bottom and 3rem on left/right */
    border: .2rem solid var(--reddishBrown); /* Sets a 0.2rem solid border using the reddish-brown variable */
    color: var(--reddishBrown); /* Applies the reddish-brown color to the button text */
    cursor: pointer; /* Changes the cursor to a pointer to indicate the button is clickable */
    font-size: 1.7rem; /* Sets the font size of the button text to 1.7rem */
    border-radius: .5rem; /* Rounds the button's corners with a 0.5rem radius */
    position: relative; /* Establishes a relative position, so the button can be used as a reference for its pseudo-element */
    overflow: hidden; /* Ensures that the button hides any content or pseudo-elements that go outside its boundaries */
    z-index: 0; /* Sets the stacking order of the button at 0, allowing pseudo-elements to stack behind it */
    margin-top: 1rem; /* Adds a 1rem space above the button */
    text-decoration: none; /* Removes text decorations like underlines from links and other elements */
}

.btn::before {
    content: ''; /* Inserts an empty content box (used to create a hover effect) */
    position: absolute; /* Positions the pseudo-element absolutely within the button */
    top: 0; /* Aligns the top of the pseudo-element with the top of the button */
    right: 0; /* Aligns the right edge of the pseudo-element with the right edge of the button */
    width: 0; /* Initially sets the width to 0 to create a sliding effect */
    height: 100%; /* Sets the height of the pseudo-element to match the height of the button */
    background: var(--reddishBrown); /* Applies the reddish-brown color as the background for the hover effect */
    transition: .3s linear; /* Smoothly transitions the width of the pseudo-element over 0.3 seconds */
    z-index: -1; /* Places the pseudo-element behind the button content (text) */
}

.btn:hover::before {
    width: 100%; /* Expands the pseudo-element to cover the entire button width when hovered */
    left: 0; /* Positions the pseudo-element starting from the left edge of the button */
}

.btn:hover {
    color: var(--white); /* Changes the text color to white when the button is hovered */
}



/* <----------Button ends here----------> */



/* <----------Login Starts here----------> */



.login-section {
    height: auto; /* Allows the login section to expand as needed based on content */
}

.login-section .container {
    margin-top: 150px; /* Adds space above the container */
    position: relative; /* Positions the container relative to its normal flow */
    width: 100%; /* Sets the container width to 100% of its parent */
    max-width: 400px; /* Limits the maximum width of the container to 400px */
    padding: 30px; /* Adds 30px padding inside the container */
    background-color: var(--white); /* Sets the container background color to white */
    border: 1px solid var(--lightGray); /* Adds a light gray border around the container */
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); /* Creates a subtle shadow for depth */
    border-radius: 5px; /* Rounds the corners of the container */
    text-align: center; /* Centers the text inside the container */
    top: 50%; /* Vertically centers the container */
    left: 50%; /* Horizontally centers the container */
    transform: translate(-50%, -50%); /* Moves the container to the exact center of the viewport */
    align-items: center; /* Aligns flex items in the center (if used in a flex container) */
}

.login-section .back-btn {
    position: absolute; /* Positions the back button absolutely within the container */
    top: 10px; /* Places the back button 10px from the top */
    left: 10px; /* Places the back button 10px from the left */
    padding: 8px 12px; /* Adds padding to the back button (8px top/bottom, 12px left/right) */
    background-color: var(--white); /* Sets the background color to white */
    border: 1px solid var(--blacker); /* Adds a solid black border */
    border-radius: 5px; /* Rounds the corners of the button */
    cursor: pointer; /* Changes the cursor to a pointer when hovering */
    font-size: 14px; /* Sets the font size of the back button text */
}

.login-section .login-box h2 {
    margin-bottom: 20px; /* Adds space below the heading */
    font-size: 24px; /* Sets the font size of the heading */
}

.login-section form {
    display: flex; /* Uses flexbox for the form layout */
    flex-direction: column; /* Aligns form elements in a vertical column */
}

.login-section input {
    padding: 15px; /* Adds padding inside the input fields */
    height: 60px; /* Sets a fixed height for the input fields */
    margin: 10px 0; /* Adds 10px margin above and below each input */
    width: 100%; /* Makes the input fields take up the full width of the container */
    border: 1px solid var(--lightGray); /* Adds a light gray border around the input fields */
    border-radius: 5px; /* Rounds the corners of the input fields */
    font-size: 16px; /* Sets a larger font size for the input text */
}

.login-section .submit-btn {
    padding: 12px; /* Adds padding inside the submit button */
    background-color: var(--blacker); /* Sets the background color of the submit button to black */
    color: var(--white); /* Sets the text color to white */
    border: none; /* Removes the border from the submit button */
    border-radius: 5px; /* Rounds the corners of the submit button */
    cursor: pointer; /* Changes the cursor to a pointer when hovering */
    margin-top: 20px; /* Adds space above the submit button */
    font-size: 16px; /* Sets the font size of the submit button text */
}

.login-section .submit-btn:hover, .back-btn:hover {
    background-color: #333; /* Changes the background color to dark gray when hovered */
}

.login-section p {
    margin-top: 15px; /* Adds space above the paragraph */
    font-size: 14px; /* Sets the font size of the paragraph text */
}

.login-section a {
    color: var(--blacker); /* Sets the link color to black */
}

.login-section .input-error {
    border: 1px solid var(--red); /* Adds a red border to inputs when there is an error */
}

.login-section .error-message {
    color: var(--red); /* Sets the error message text color to red */
    font-size: 12px; /* Sets the font size of the error message text */
    margin-top: 4px; /* Adds space above the error message */
}



/* <----------Login ends here----------> */



/* <----------Header starts here----------> */



header {
    position: fixed; /* Keeps the header fixed at the top of the page, visible during scrolling */
    top: 0; /* Positions the header at the very top of the viewport */
    left: 0; /* Aligns the header to the left edge of the page */
    right: 0; /* Ensures the header stretches across the full width of the page */
    z-index: 1000; /* Ensures the header stays above other elements (high stacking order) */
    display: flex; /* Uses flexbox for laying out the child elements (logo, navbar) */
    align-items: center; /* Vertically centers the content inside the header */
    justify-content: space-between; /* Distributes space between the logo on the left and the navbar on the right */
    background: var(--peachyOrange); /* Sets the background color of the header using the peachy-orange variable */
    padding: 1rem 5%; /* Adds 1rem padding to the top/bottom and 5% padding on the left/right */
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .1); /* Adds a subtle shadow beneath the header for a raised effect */
}

header .logo {
    font-size: 2.5rem; /* Sets a large font size for the logo text */
    text-decoration: none; /* Removes text decorations like underlines from links and other elements */
    font-weight: bolder; /* Makes the logo text bold */
    color: var(--darkgray); /* Sets the text color of the logo using the dark-gray variable */
}

header .logo i {
    padding-right: .5rem; /* Adds 0.5rem spacing to the right of the icon in the logo */
    color: var(--gold); /* Colors the icon (such as a font-awesome icon) in gold */
}

header .navbar {
    display: flex; /* Aligns the navbar links in a horizontal row */
    justify-content: flex-start; /* Aligns the navbar links to the left side of the header */
    margin-right: 50rem; /* Adds 50rem margin to the right to adjust spacing (can be customized) */
    font-weight: 600; /* Sets the font weight of the navbar links to semi-bold */
}

header .navbar a {
    font-size: 2rem; /* Sets the font size of the navbar links */
    text-decoration: none; /* Removes text decorations like underlines from links and other elements */
    margin-left: 2rem; /* Adds 2rem spacing between each navbar link */
    color: var(--darkgray); /* Sets the text color of the navbar links using the dark-gray variable */
}

header .navbar a:hover {
    color: var(--red); /* Changes the link color to red when the user hovers over the navbar links */
}

#menu-bar {
    font-size: 3rem; /* Sets the size of the menu bar icon (often for mobile view) */
    cursor: pointer; /* Changes the cursor to a pointer when hovering over the menu icon */
    color: var(--darkCharcoal); /* Colors the menu bar icon with the dark charcoal color */
    border: .1rem solid var(--darkCharcoal); /* Adds a thin dark charcoal border around the menu icon */
    border-radius: .3rem; /* Rounds the corners of the menu iconâ€™s border */
    padding: .5rem 1.5rem; /* Adds padding of 0.5rem to the top/bottom and 1.5rem to the left/right */
    display: none; /* Hides the menu icon (usually displayed in mobile views only) */
}



/* <----------Header ends here----------> */



/* <----------Home starts here----------> */



.home {
    display: flex; /* Applies a flexbox layout, allowing child elements to align and space dynamically */
    flex-wrap: wrap; /* Ensures the child elements wrap onto the next line if the container is too small (responsive behavior) */
    gap: 1.5rem; /* Adds a 1.5rem gap between the child elements */
    min-height: 100vh; /* Makes sure the home section fills at least 100% of the viewport height */
    align-items: center; /* Vertically centers the child elements within the container */
    background: url(Images/White\ Background.jpg) no-repeat; /* Sets a background image, preventing repetition */
    background-size: cover; /* Ensures the background image covers the entire container */
    background-position: center; /* Centers the background image */
}

.home .content {
    position: relative; /* Allows for the pseudo-element positioning relative to this element */
    border-radius: 1rem; /* Adds rounded corners to the content block */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1); /* Adds a light shadow for a subtle 3D effect */
    flex: 1 1 40rem; /* Allows the content to grow/shrink, with a base size of 40rem */
    padding: 4rem; /* Adds 4rem of padding inside the content area */
    order: 1; /* Ensures this content appears first (before other flex elements) */
    z-index: 1; /* Places the content above any lower z-index elements (like the pseudo-element background) */
}

.home .content::before {
    content: ''; /* Inserts an empty pseudo-element for background effect */
    position: absolute; /* Positions the pseudo-element relative to its parent (.content) */
    top: 0; /* Aligns the top of the pseudo-element with the top of the content */
    left: 0; /* Aligns the left edge of the pseudo-element with the left edge of the content */
    width: 100%; /* Ensures the pseudo-element spans the full width of the content */
    height: 100%; /* Ensures the pseudo-element spans the full height of the content */
    background-color: var(--peachyOrange); /* Applies a semi-transparent background color */
    border-radius: 1rem; /* Matches the border-radius of the content for consistent rounded corners */
    opacity: 0.64; /* Adds transparency to the background for a layered effect */
    z-index: -1; /* Places the pseudo-element behind the actual content */
}

.home .content h3 {
    font-size: 5rem; /* Sets the font size for the h3 element to 5rem (large heading) */
    color: var(--blacker); /* Uses a custom color (darker shade) for the heading text */
}

.home .content p {
    font-size: 1.7rem; /* Sets the font size for paragraph text to 1.7rem */
    color: var(--blacker); /* Uses the darker color for paragraph text */
    padding: 1rem 0; /* Adds 1rem padding to the top and bottom of the paragraph for spacing */
}

.home .image {
    flex: 1 1 40rem; /* Allows the image container to grow/shrink with a base size of 40rem */
    order: 2; /* Ensures the image appears after the content block */
}

.home .image img {
    width: 100%; /* Makes the image take up 100% of its container's width */
    padding: 1rem; /* Adds 1rem of padding around the image */
    border-radius: 20px; /* Rounds the corners of the image for a smooth, polished look */
}

.carousel {
    width: 100%; /* Ensures the carousel takes up 100% of the container's width */
    max-width: 800px; /* Sets a maximum width of 800px for the carousel */
    margin: auto; /* Centers the carousel horizontally */
    position: relative; /* Positions the carousel relative to other elements */
    overflow: hidden; /* Hides any content (like slides) that overflows the container */
}

.carousel img {
    width: 100%; /* Ensures the image takes up 100% of the carousel's width */
    max-width: 500px; /* Sets a maximum width of 500px for the images */
    height: auto; /* Ensures the image scales proportionally (maintaining aspect ratio) */
    object-fit: cover; /* Ensures the image covers the container while maintaining aspect ratio */
    margin-left: 15rem; /* Adds 15rem of space to the left of the image */
    margin-bottom: 5rem; /* Adds 5rem of space below the image */
}

.slides {
    display: flex; /* Displays the slides in a row using flexbox */
    width: 300%; /* Sets the width of the slides container to 300% (3 slides) */
    transition: transform 0.5s ease; /* Animates the sliding effect between images */
}

.slide {
    width: 100%; /* Each slide takes up 100% of the container's width */
    flex: 1 0 100%; /* Ensures each slide is treated as a flex item with no shrinking or growing */
}

.slide img {
    width: 100%; /* Ensures the image within each slide takes up the full width of its container */
    height: auto; /* Keeps the image responsive by adjusting its height proportionally */
    border-radius: 10px; /* Adds a border-radius of 10px for rounded image corners */
}

.navigation {
    position: absolute; /* Positions the navigation elements relative to the carousel */
    bottom: 10px; /* Positions the navigation buttons 10px from the bottom of the carousel */
    left: 50%; /* Centers the navigation buttons horizontally */
    transform: translateX(-50%); /* Moves the navigation buttons exactly to the center */
    display: flex; /* Displays the navigation buttons in a horizontal row */
    justify-content: center; /* Centers the navigation buttons within their container */
}

.manual-btn {
    border: 2px solid var(--blacker); /* Sets a 2px border around each navigation button */
    padding: 5px; /* Adds padding of 5px inside the buttons */
    border-radius: 50%; /* Makes the navigation buttons round */
    cursor: pointer; /* Changes the cursor to a pointer when hovering over the button */
    transition: background 0.3s ease; /* Adds a smooth transition effect to the background color */
    margin: 0 5px; /* Adds 5px of space between the navigation buttons */
}

.manual-btn:hover {
    background: var(--blacker); /* Changes the background color to a custom dark shade when hovered */
}



/* <----------Home ends here----------> */



/* <----------Features starts here----------> */



.features .heading { 
    /* Controls the style of the heading across feature sections */
    width: 100%; /* Ensures the heading takes up the full width */
    text-align: center; /* Centers the heading text */
    font-size: 4rem; /* Sets a large font size for the heading */
    color: var(--darkCharcoal); /* Applies dark charcoal color to the heading text */
}

.features,
.features2,
.features3 {
    display: flex; /* Uses flexbox layout for both content and image */
    flex-wrap: wrap; /* Allows child elements (content and image) to wrap onto the next line if necessary */
    gap: 10rem; /* Adds 10rem space between content and image */
    min-height: 70vh; /* Ensures the section takes up at least 70% of the viewport height */
    align-items: center; /* Vertically centers the content and image */
    padding-top: 0rem; /* No padding added at the top */
}

.features .content h3,
.features2 .content h3,
.features3 .content h3 {
    font-size: 2rem; /* Sets the font size of the h3 element */
    color: var(--blacker); /* Applies a black color to the h3 text */
    font-weight: 800; /* Sets a bold weight for the h3 element */
}

.features .content p,
.features2 .content p,
.features3 .content p {
    font-size: 1.7rem; /* Sets the font size of the paragraph text */
    color: var(--blacker); /* Applies a black color to the paragraph text */
    font-weight: 500; /* Sets a semi-bold font weight for paragraph text */
    padding: 1rem 0; /* Adds 1rem padding above and below the paragraph text */
}

.features .content ul,
.features2 .content ul,
.features3 .content ul {
    list-style-type: disc; /* Uses bullet points for the list items */
    padding-left: 20px; /* Indents the list by 20px */
}

.features .content li,
.features2 .content li,
.features3 .content li {
    font-size: 1.7rem; /* Sets the font size for list items to match the paragraphs */
    color: var(--blacker); /* Sets the text color to black */
    margin: 0; /* Removes default margins for list items */
}

.features .content {
    flex: 1 1 40rem; /* Allows the content to flex-grow, with a base size of 40rem */
    padding-top: 1rem; /* Adds padding above the content */
    order: 2; /* Places the content after the image */
}

.features .image {
    flex: 1 1 40rem; /* Allows the image to flex-grow, with a base size of 40rem */
    order: 1; /* Places the image before the content */
}

.features2 .content {
    flex: 1 1 40rem; /* Allows the content to flex-grow, with a base size of 40rem */
    padding-top: 1rem; /* Adds padding above the content */
    order: 1; /* Places the content before the image */
}

.features2 .image {
    flex: 1 1 40rem; /* Allows the image to flex-grow, with a base size of 40rem */
    order: 2; /* Places the image after the content */
}

.features3 .content {
    flex: 1 1 40rem; /* Allows the content to flex-grow, with a base size of 40rem */
    padding-top: 1rem; /* Adds padding above the content */
    order: 2; /* Places the content after the image */
}

.features3 .image {
    flex: 1 1 40rem; /* Allows the image to flex-grow, with a base size of 40rem */
    order: 1; /* Places the image before the content */
}

.features .image img,
.features2 .image img,
.features3 .image img {
    width: 100%; /* Ensures the image takes up 100% of its containerâ€™s width */
    padding: 1rem; /* Adds 1rem of padding around the image */
    border-radius: 20px; /* Rounds the corners of the image for smooth edges */
}



/* <----------Features ends here----------> */



/* <----------About starts here----------> */



.about {
    display: flex; /* Uses flexbox to lay out the content and image side by side */
    flex-wrap: wrap; /* Allows content and image to wrap onto the next line in smaller viewports (responsive) */
    gap: 10rem; /* Adds a 10rem gap between the content and image */
    min-height: 1vh; /* Ensures the section takes up at least a very small portion of the viewport height */
    align-items: center; /* Vertically aligns the child elements within the container */
    padding-top: 0rem; /* No padding at the top of the section */
}

.about .heading { 
    /* Controls the style of the section heading */
    width: 100%; /* Ensures the heading takes up the full width of the section */
    text-align: center; /* Centers the heading text */
    font-size: 4rem; /* Sets a large font size for the heading */
    color: var(--darkCharcoal); /* Applies a dark charcoal color to the heading text */
}

.about .content {
    flex: 1 1 40rem; /* Makes the content flexible, with a base width of 40rem */
    padding-top: 0rem; /* No padding above the content */
}

.about .content p {
    text-align: center; /* Centers the paragraph text */
    font-size: 1.7rem; /* Sets the font size of the paragraph text to 1.7rem */
    color: var(--darkgray); /* Uses dark gray as the text color */
    padding: 0rem 0; /* No padding above or below the paragraph text */
}

.about .services-list {
    display: grid; /* Uses CSS grid layout for the services section */
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Creates multiple columns, each at least 250px wide */
    grid-gap: 40px; /* Adds a 40px gap between grid items */
    margin-top: 50px; /* Adds a 50px margin above the grid */
}

.about .services-list div {
    background: var(--white); /* Sets a white background for each service box */
    padding: 40px; /* Adds 40px padding inside each service box */
    font-size: 13px; /* Sets a smaller font size for text inside the service box */
    font-weight: 300; /* Makes the text lighter (font-weight 300) */
    border-radius: 10px; /* Rounds the corners of the service box by 10px */
    transition: background 0.5s, transform 0.5s; /* Adds smooth transitions for background color and transform (hover effect) */
}

.about .services-list div i {
    font-size: 50px; /* Sets the icon size to 50px */
    margin-bottom: 30px; /* Adds 30px of space below the icon */
}

.about .services-list div img {
    width: 100%; /* Makes the image take up 100% of its container's width */
    height: auto; /* Adjusts the height automatically based on the aspect ratio */
    margin-bottom: 30px; /* Adds 30px of space below the image */
    border-radius: 10px; /* Rounds the corners of the image by 10px */
    object-fit: cover; /* Ensures the image covers its container without distorting */
}

.about .services-list div h2 {
    font-size: 20px; /* Sets the font size for the heading to 20px */
    font-weight: 500; /* Sets a semi-bold weight (500) for the heading */
    margin-bottom: 15px; /* Adds 15px of space below the heading */
}

.about .services-list div p {
    font-size: 20px; /* Sets the font size for paragraph text to 20px */
    font-weight: 500; /* Makes the paragraph text slightly bold */
    margin-bottom: 15px; /* Adds 15px of space below the paragraph */
}

.about .services-list div a {
    text-decoration: none; /* Removes the underline from the link */
    color: var(--blacker); /* Sets the text color of the link to a darker custom color */
    font-size: 12px; /* Sets the font size of the link to 12px */
    margin-top: 20px; /* Adds 20px of space above the link */
    display: inline-block; /* Displays the link as an inline block to apply padding and margins */
}

.about .services-list div:hover {
    background: #e8e8e8; /* Changes the background color to light gray when hovered */
    transform: translateY(-10px); /* Moves the service box up by 10px, creating a hover "floating" effect */
}



/* <----------About ends here----------> */



/* <----------Contacts starts here----------> */



.contact-left {
    flex-basis: 35%; /* Sets the width of the left contact section to 35% of the available space */
}

.contact-right {
    flex-basis: 60%; /* Sets the width of the right contact section to 60% of the available space */
}

.contact-left h1 {
    font-size: 25px; /* Sets the font size for the heading in the left contact section */
}

.contact-left p {
    margin-top: 30px; /* Adds 30px of space above each paragraph in the left contact section */
    font-size: 20px; /* Sets the font size for the paragraph text in the left contact section */
    font-weight: 500; /* Applies medium font weight to the paragraph text */
}

.contact-left p i {
    color: var(--blue); /* Colors the icons inside paragraphs with the blue variable */
    margin-right: 15px; /* Adds 15px of space to the right of each icon */
    font-size: 25px; /* Sets the font size for the icons */
}

.social-icons {
    margin-top: 30px; /* Adds 30px of space above the social icon links */
}

.social-icons a {
    text-decoration: none; /* Removes the underline from the social icon links */
    font-size: 50px; /* Sets the size of the social icons to 50px */
    margin-right: 15px; /* Adds 15px of space to the right of each social icon */
    color: #ababab; /* Colors the social icons in light gray */
    display: inline-block; /* Displays the social icons inline, allowing them to retain block-level properties */
    transition: transform 0.5s; /* Smoothly animates changes in the transform property over 0.5 seconds */
}

.social-icons a:hover {
    color: var(--darkBlue); /* Changes the color of social icons to dark blue when hovered */
    transform: translateY(-5px); /* Moves the social icons up by 5px when hovered */
}

.contact-right form {
    width: 100%; /* Ensures the form takes up the full width of the contact-right container */
}

form input, form textarea {
    width: 100%; /* Sets the input fields and text areas to take up the full width of their container */
    border: 0; /* Removes the border from input fields and text areas */
    outline: none; /* Removes the default focus outline from input fields and text areas */
    background: #ababab; /* Sets a light gray background color for input fields and text areas */
    padding: 15px; /* Adds 15px of padding inside input fields and text areas */
    margin: 15px 0; /* Adds 15px of margin above and below input fields and text areas */
    color: #fff; /* Sets the text color inside input fields and text areas to white */
    font-size: 18px; /* Sets the font size of the text inside input fields and text areas */
    border-radius: 6px; /* Rounds the corners of input fields and text areas with a 6px radius */
}

form .btn2 {
    padding: 10px 10px; /* Adds 10px of padding to the button */
    font-size: 18px; /* Sets the font size of the button text to 18px */
    margin-top: 20px; /* Adds 20px of space above the button */
    cursor: pointer; /* Changes the cursor to a pointer when hovering over the button */
}

.copyright {
    width: 100%; /* Sets the width of the copyright section to the full width of its container */
    text-align: center; /* Centers the text inside the copyright section */
    padding: 25px; /* Adds 25px of padding to the copyright section */
    font-size: 20px; /* Sets the font size of the copyright text to 20px */
    font-weight: 300; /* Applies a light font weight to the copyright text */
    margin-top: 20px; /* Adds 20px of margin above the copyright section */
}